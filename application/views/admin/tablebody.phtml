<?php

$c = $this->offset;
foreach ($this->data as $item) {
	if (strtolower($this->title) == 'log' && isset($item['start_process_time']) && !isset($item['process_time'])) :
		print '<tr class="progress' . ((time() - $item['start_process_time']->sec) > 3600 ? ' alert-danger' : '') . '">';
	else:
		print '<tr>';
	endif;
	print '<td data-title=\'#\'>'
		. '<label class="checkbox">'
		. '<a onclick="update_current(this);" href="#popupModal" data-type="update" data-toggle="modal" role="button" data-remote="">#' . ($c + 1) . '</a>&nbsp;'
		. '<input value="' . $item['_id'] . '" type="' . (AdminController::authorized('write') ? 'checkbox' : 'hidden') . '" id="chk' . $c . '"/>'
		. '</label></td>';
	$c++;
	foreach ($this->columns as $h => $columnName) {
		$data = $item->get($h);
		print '<td data-title="' . $columnName . '">';
		if (isset($edit_key) && $h == $edit_key) {
			$url = $this->baseUrl . '/admin/edit?type=' . strtolower($this->title) . '&amp;id=' . $item['_id'];
			print '<a href="#popupModal " data-remote="' . $url . '" role="button" data-toggle="modal">' . $data . '</a>';
		} else if (($h == 'from' || $h == 'to' || $h == 'urt' || $h == 'notify_time') && $data) {
			$dateFormat = "Y-m-d H:i:s";
			if (!empty($item["tzoffset"])) {
				// TODO change this to regex and move to method in model
				$tzoffset = $item['tzoffset'];
				$sign = substr($tzoffset, 0, 1);
				$hours = substr($tzoffset, 1, 2);
				$minutes = substr($tzoffset, 3, 2);
				$time = $hours . ' hours ' . $minutes . ' minutes';
				if ($sign == "-") {
					$time .= ' ago';
				}
				$zend_date = new Zend_Date(strtotime($time, $item['urt']->sec));
				$zend_date->setTimezone('UTC');
				echo $zend_date->toString($dateFormat, 'php') . $item['tzoffset'];
			} else {
				$zend_date = new Zend_Date($data->sec);
				echo $zend_date->toString($dateFormat, 'php');
			}
		} else if ($h == 'arate' && isset($item['arate_id'])) {
			$url = $this->baseUrl . '/admin/edit?coll=rates&amp;type=update&amp;id=' . $item['arate_id'];
			print '<a href="#popupModal " data-remote="' . $url . '" role="button" data-toggle="modal" title="' . $data . '">' . $data . '</a>';
		} else if (($active == 'balances' && is_numeric($data) && !in_array($h, array('aid', 'sid')) && strpos($h, 'billrun') === FALSE) || ($active == 'lines' && ($h == 'aprice' || $h == 'usagev' || $h == 'usagesb'))) {
			if (is_float($data) && strpos($h, 'usage') === FALSE) { // hack: is_float sometimes take long numbers as float
				print number_format($data, 2);
			} else if (($active == 'lines' && $item['usaget'] == 'data') || ($active == 'balances' && strpos($h, 'usage') !== FALSE && strpos($h, 'data') !== FALSE)) {
				print Billrun_Util::byteFormat($data, null, 3, true);
			} else {
				print number_format($data, 0);
			}
		} else if ($h == 'calc_time' && $data) {
			print date("Y-m-d H:i:s", $data);
		} else if ($h == 'calc_name') {
			$names = Billrun_Factory::config()->getConfigValue('queue.calculators');
			if ($data) {
				$key = array_search($data, $names);
				print($names[$key + 1]);
			} else {
				print ($names[0]);
			}
		} else {
			print $data;
		}
		print '</td>';
	}
	print '</tr>';
}